# docker-compose.dev.yml
version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - '3000:3000'
      - '9229:9229' # Debug port
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules # Prevent mounting host node_modules
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:postgres@postgres:5432/clinic_management}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - JWT_SECRET=${JWT_SECRET:-dev_secret}
      - MQTT_BROKER_URL=${MQTT_BROKER_URL:-mqtt://mqtt-broker:1883}
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID:-{}}
      - FIREBASE_PRIVATE_KEY=${FIREBASE_PRIVATE_KEY:-{}}
      - FIREBASE_CLIENT_EMAIL=${FIREBASE_CLIENT_EMAIL:-{}}

    depends_on:
      - postgres
      - redis
      - mqtt-broker
    networks:
      - clinic-network
    restart: unless-stopped

    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/liveness']
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 30s

  web:
    build:
      context: ./web
      dockerfile: Dockerfile.dev
    ports:
      - '5173:5173'
    volumes:
      - ./web:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=${VITE_API_URL:-http://localhost:3000}
      - VITE_MQTT_BROKER_URL=${VITE_MQTT_BROKER_URL:-ws://localhost:8084/mqtt}
      - VITE_FIREBASE_CONFIG=${VITE_FIREBASE_CONFIG:-{}}
    depends_on:
      - api
    networks:
      - clinic-network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=clinic_management
    networks:
      - clinic-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d clinic_management']
      interval: 120s # Increased to 2 minutes
      timeout: 10s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
    networks:
      - clinic-network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  mqtt-broker:
    image: emqx:5.8.6
    ports:
      - '1883:1883'
      - '8084:8084'
      - '18083:18083' # EMQX dashboard
    volumes:
      - emqx-data:/opt/emqx/data
      - emqx-etc:/opt/emqx/etc
    environment:
      - EMQX_ALLOW_ANONYMOUS=true
    networks:
      - clinic-network

networks:
  clinic-network:

volumes:
  postgres-data:
  redis-data:
  emqx-data:
  emqx-etc:
